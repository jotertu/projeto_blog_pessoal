                                    #Para configurar o nosso Banco de dados MySQL, vamos Inserir as linhas abaixo no arquivo application.properties.
#***************************************************************************************************************************************************************************

                                                                            # spring.jpa.hibernate.ddl-auto
# Define como o JPA irá inicializar o Banco de dados.
# update ? O modelo de objeto criado com base nas Anotações na Classe Model é comparado
# com o esquema existente, e então o Hibernate atualiza o esquema de acordo com as diferenças.
# Ele nunca exclui as tabelas ou colunas, mesmo que não sejam mais utilizadas. Nesta opção os
# ados persistidos não serão apagados.

spring.jpa.hibernate.ddl-auto=update
#***************************************************************************************************************************************************************************

                                                                            # spring.jpa.database
#Define o SGBD que será utilizado (MySQL)

spring.jpa.database=mysql
#***************************************************************************************************************************************************************************

                                                                            # spring.datasource.url
# Define os dados da conexão com o Banco de dados:
# jdbc:mysql://localhost/db_blogpessoal ? endereço (jdbc:mysql://localhost/) + nome do Banco (db_blogpessoal)
# ?createDatabaseIfNotExist=true ? criar automaticamente o Banco de dados no MySQL caso ele não exista (true)
# &serverTimezone=America/Sao_Paulo ? define o fuso horario do servidor MySQL (America/Sao_Paulo)
# &useSSl=false ? desabilita a camada de segurança da conexão com o MySQL (SSL)

spring.datasource.url=jdbc:mysql://localhost/db_blogpessoal?createDatabaseIfNotExist=true&serverTimezone=America/Sao_Paulo&useSSl=false
#***************************************************************************************************************************************************************************

                                                                            # spring.datasource.username
# Define o usuário do MySQL (root)

spring.datasource.username=root
#***************************************************************************************************************************************************************************

                                                                            # spring.datasource.password
# Define a senha do usuário do MySQL (root)

spring.datasource.password=root
#***************************************************************************************************************************************************************************

                                                                            # spring.datasource.driver-class-name
# Define a classe de driver JDBC (Java Database Connectivity) que o Spring Framework usará para se conectar a um banco de dados MySQL

# spring.datasource.driver-class-name: Esta é uma propriedade de configuração do Spring Framework que especifica
# o nome completo da classe do driver JDBC a ser utilizada.

# com.mysql.cj.jdbc.Driver: É o valor atribuído à propriedade. Nesse caso, está definindo a classe de driver específica para o MySQL.
# O driver JDBC é essencial para traduzir as solicitações de conexão e consulta entre o aplicativo Java e o banco de dados MySQL.

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#***************************************************************************************************************************************************************************

                                                                            # spring.jpa.show-sql
# Exibe todas as Queries SQL no Console do STS durante a execução da aplicação

spring.jpa.show-sql=true
#***************************************************************************************************************************************************************************

                                                                            # spring.jpa.properties.hibernate.dialect
# Configura a versão do MySQL, em nosso projeto estamos utilizando a versão 8 (org.hibernate.dialect.MySQL8Dialect).

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect
#***************************************************************************************************************************************************************************

                                                                            # spring.jpa.properties.jakarta.persistence.sharedCache.mode
# Diz respeito ao cache compartilhado (shared cache) em um ambiente que utiliza a
# especificação Jakarta Persistence (anteriormente conhecida como JPA, Java Persistence
# API), muitas vezes em conjunto com o Spring Framework

# spring.jpa.properties: Esta parte da configuração permite que você defina
# propriedades específicas da JPA que serão passadas para o mecanismo de persistência

# jakarta.persistence.sharedCache.mode: Esta é uma propriedade da especificação
# Jakarta Persistence (JPA) que controla o modo de funcionamento do cache compartilhado.

#ENABLE_SELECTIVE: É o valor atribuído à propriedade

spring.jpa.properties.jakarta.persistence.sharedCache.mode=ENABLE_SELECTIVE
#***************************************************************************************************************************************************************************
                                                                            # spring.jackson.date-format
# Configura o formato da Data (yyyy-MM-dd) e da Hora (HH:mm:ss) da aplicação

spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
#***************************************************************************************************************************************************************************
                                                                            # spring.jackson.time-zone
# Configura o fuso horario do servidor da aplicação (Brazil/East)

spring.jackson.time-zone=Brazil/East
#***************************************************************************************************************************************************************************